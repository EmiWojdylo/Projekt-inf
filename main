from psychopy import visual, core, event, sound, gui, data
import random
import csv
import os


###Ustawienia wizualne
win = visual.Window(size=(1440, 900), color='silver', units='pix', fullscr=True)
text_stim = visual.TextStim(win=win, text='', color='black', height=40, wrapWidth=1000)


###Dane uczestnika
info = {'ID': '', 'Wiek': '', 'Plec':''}

dlg = gui.DlgFromDict(info, title='Eksperyment OSPAN_Click')
if not dlg.OK:
    core.quit()

participant_id = info['ID']


output_file = 'klik_data.csv'

###Objaśnienie zmiennych w pliku wyjściowym (output_file): 
##block_type - eksperyment/trial
##dur_t - czas trwania dźwięku
##resp - odpowiedź uczestnika

if not os.path.exists(output_file):
    with open(output_file, mode='w', newline='') as f:
        writer = csv.writer(f)
        writer.writerow([
            'id', 'trial', 'block_type',
            'dur_t', 'resp', 'rt'
        ])

###Skala do szacowania czasu - od 2 do 8 sekund - tylko pełne sekundy
slider_duration = 8.0  #timeout dla odpowiedzi
time_slider = visual.Slider(
    win, ticks=(2, 3, 4, 5, 6, 7, 8),
    labels=['2s', '3s', '4s', '5s', '6s', '7s', '8s'],
    size=(1.2, 0.1), pos=(0, -0.4),
    granularity=0.1, style='rating', color='black',
    labelColor='black', markerColor='black'
)

###Punkt fiksacji (wyświetlany 1,5 sekundy)
duration = 1.5
fixation = visual.TextStim(win, text='+', height=0.1, color='black', pos=(0, 0))


###Instrukcje z podziałem na etapy
##instrukcja_x, gdzie x to nazwa etapu, którego instrukcja dotyczy


instrukcja_skala_dzwieki = visual.TextStim(win, text="""Oszacuj czas trwania dźwięków:
  """, pos=(0, 0.3), color='black'
)


instrukcja_trening_kliki = visual.TextStim(win, text="""
    W następnej części będziesz słuchać serii dźwięków.
    Utrzymuj wzrok na punkcie fiksacji.
    Wciśnij spację, aby przejść do zadania.
""", pos=(0, 0.3), color='black'
)

instrukcja_eks_dzwieki = visual.TextStim(win, text="""
    W następnej części będziesz słuchać dżwięków,
    a następnie oszacowywać, ile trwały.
    Aby odpowiedzieć, zaznacz od 1 do 8s. 
    Odpowiadaj tak, jak Ci się wydaje.
    
    Naciśnij spację, aby przejść do zadania.
""", pos=(0, 0.3), color='black'
)

instrukcja_glowna = visual.TextStim(win, text="""
    Teraz nadszedł czas na ostatnie zadanie.
    Będziesz rozwiązywać równania oraz zapamiętywać litery.
    Przed każdą serią równań pojawią się dźwięki.
    Przysłuchuj im się uważnie, utrzymując wzrok
    na punkcie fiksacji.

    Naciśnij spację, aby przejść do zadania.
""", pos=(0, 0.3), color='black'
)


###Plik z dzwiekiem
klik_dzwiek = sound.Sound("s8.wav")

###Jedna seria klików
def jedna_seria_click(seria_num, duration_s, block_type):
    klik_dzwiek.setVolume(1.0)
    fixation.draw()
    win.flip()
    klik_dzwiek.play()
    core.wait(duration_s)
    klik_dzwiek.stop()

    time_slider.reset()
    instrukcja_skala_dzwieki.draw()
    time_slider.draw()
    win.flip()

    timer = core.Clock()
    rt = None
    response = None

    while timer.getTime() < slider_duration:
        if event.getKeys(['escape']):
            core.quit()
        time_slider.draw()
        instrukcja_skala_dzwieki.draw()
        win.flip()
        if time_slider.getRating() is not None and rt is None:
            rt = timer.getTime()
            response = time_slider.getRating()
            break

    ###Zapis do csv
    with open(output_file, mode='a', newline='') as f:
        writer = csv.writer(f)
        writer.writerow([
            participant_id, seria_num, block_type,
            duration_s, response, rt
        ])

    core.wait(0.5)


###Blok 1 - trening OSPAN - 3x 

#todo


###Blok 2 - trening klików - 2x seria dźwięków, oszacowanie czasu trwania

for i in range(2):
    losowa_dl = random.choice([2, 3, 4, 5, 6, 7, 8])
    jedna_proba_click(seria_num=i+1, duration_s=losowa_dl, block_type='t')


###Blok 3 - eksperyment, oszacowanie trwania klików, 20 prób

for i in range(20):
    losowa_dl = random.choice([2, 3, 4, 5, 6, 7, 8])
    jedna_proba_click(seria_num=i+1, duration_s=losowa_dl, block_type='e')


###Blok 4


# === ZAKOŃCZENIE ===
zakonczenie = visual.TextStim(win, text="Dziękujemy! Koniec części z klikami.", color='black')
zakonczenie.draw()
win.flip()
event.waitKeys()

win.close()
core.quit()
